--bwlimit "Mon-07:15,2.5M 07:45,150k 18:15,50k Mon-00:00,50k Tue-07:15,2.5M 07:45,150k 18:15,50k Tue-00:00,50k Wed-07:15,2.5M 07:45,150k 18:15,50k Wed-00:00,50k Thu-07:15,2.5M 07:45,150k 18:15,50k Thu-00:00,50k Fri-07:15,2.5M 07:45,150k 18:15,50k Fri-00:00,50k Sat-00:00,50k Sun-00:00,50k"


The rclone code you provided includes the --bwlimit flag, which is used to limit the amount of bandwidth used by the rclone command. 
The values specified after the --bwlimit flag represent a schedule of bandwidth limits for different times and days of the week.

## The format for specifying the bandwidth limits is as follows:

Each day is separated by a space
Each day is divided into time blocks, with start and end times separated by a comma
Within each time block, a bandwidth limit is specified in bytes per second, followed by a letter indicating the unit 
(e.g., 'M' for megabytes or 'k' for kilobytes)


## In the example you provided, the bandwidth limits are specified for different days and times as follows:

On Mondays, from 7:15am to 7:45am, limit the bandwidth to 2.5 megabytes per second (MB/s); 
            from 7:45am to 6:15pm, limit the bandwidth to 150 kilobytes per second (kB/s); 
            from 12:00am to 7:15am the next day, limit the bandwidth to 50 kB/s.

On Tuesdays, the same bandwidth limits apply as on Mondays.
On Wednesdays, the same bandwidth limits apply as on Mondays.
On Thursdays, the same bandwidth limits apply as on Mondays.
On Fridays, the same bandwidth limits apply as on Mondays.
On Saturdays and Sundays, from 12:00am to 11:59pm, limit the bandwidth to 50 kB/s.

These bandwidth limits allow the user to control how much network traffic the rclone command consumes during specific times of the day, 
ensuring that other applications or users can still access sufficient network resources.

#
# ██████  ██████   █████  ███████  █████  ███    ██  █████          
# ██       ██   ██ ██   ██ ██      ██   ██ ████   ██ ██   ██         
# ██   ███ ██████  ███████ █████   ███████ ██ ██  ██ ███████         
# ██    ██ ██   ██ ██   ██ ██      ██   ██ ██  ██ ██ ██   ██         
# ██████  ██   ██ ██   ██ ██      ██   ██ ██   ████ ██   ██         
#                                                                   
# ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                                                                
# DASHBOARD # MENU > DASHNOARDS > NEW > IMPORT > LOAD > PONT PROMETHEUS > IMPORT (JSON)


# https://grafana.com/grafana/dashboards/
# https://grafana.com/grafana/dashboards/?collector=nodeexporter&dataSource=prometheus&orderBy=reviewsCount&direction=desc&category=hostmetrics


# ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# PROMETHEUS CONFIGURATION FILE
# https://grafana.com/docs/grafana-cloud/send-data/metrics/metrics-prometheus/prometheus-config-examples/docker-compose-linux/


# https://prometheus.io/docs/introduction/overview/
# https://prometheus.io/docs/prometheus/latest/installation/

# https://prometheus.io/docs/guides/node-exporter/
# https://github.com/prometheus/node_exporter

# https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/


# ############################################################################################################################### 

# DOCKER OP-LEVEL KEYS

DB > WEBAPP

# version
# services
# volumes
# networks
# configs
# secrets



https://images.chainguard.dev/
https://elest.io/
https://www.linuxserver.io/
https://hub.rapidfort.com/
RapidFort