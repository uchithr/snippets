

$ docker compose up -d
$ docker compose -f my-file.yml up -d
5001:80 <hostport_externalport>:<guestport_insideport>
HOST CONFIGS : CONTAINER CONFIGS

#########################################################################################################################################################
###########  DOCKER COMPOSE OVERVIEW  ###################################################################################################################
#########################################################################################################################################################



services:
  mongodb:                                  # DEFAULT CONTAINER NAME
    image:'mongo'                           # DOCKER HUB REPOSITORY PUBLISHED TAG NAME
    container_name: mongodb1                # CUSTOM CONTAINER NAME
    volumes:                                # DATA STORE LOCATION
     - data:/data/db                        # MAPPING PATHS  
    environmanet:                           # VARIABLES
     - MONGO_INITDB_ROOT_USERNAME:admin
     - MONGO_INITDB_ROOT_PASSWORD:admin
    env_file:                               # ALTERNATIVE SOLUTION FOR ENVIRONMENT VARIABLES
     - ./env/mongo.env                      # SAME DIRECTORY CURRENTLY IN IN MENTION A PASSWORFD FILE
     netwroks:
     - custom-net1                          # CREATES A NATWORK
  
  backend:      
    build: ./backend                        # SAME DIRECTORY CURRENTLY IN WITH THIS FILE LOCATED
     dockerfile: Dokerfile                  # DOCKER FILE NAME
    ports:
     - '3000:80'                            # host_port:container_port
    volumes:
     - logs:/app/logs
     - ./backend:/app                       # SAME DIRECTORY CURRENTLY IN - USED RELATIVE PATH
    env_file:                               # ALTERNATIVE SOLUTION WITHOUT LISTING CREDS
     - ./env/backend.env                    # SAME DIR
     depends_on:
     - mongodb                              # WHICH SERVICES <containers> CONNECTED TO 'DEPENDENCIES'

  frontend:     
    build: ./frontend                       # SAME DIRECTORY CURRENTLY IN used frontend
    ports: 3000:3000                        ### <hostport:containerport> ## <windows:linux>
    volumes:
    - ./frontend/src/:/app/src
    stdin_open: true                        # docker run -it PARAMETER
    tty: true                               # docker run -it PARAMETER

networks:
  custom-net1:
    driver: bridge
    
volumes:
  data:
  logs:

############################################################################################################################################################
## PORTAINER ################################################################################################################################################
############################################################################################################################################################

docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:2.21.1


services:
  portainer-ce:
    image: portainer/portainer-ce:2.21.1
    container_name: portainer
    restart: always
    ports:
      - "8000:8000"
      - "9443:9443"    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:
    external: true
    name: portainer_data

############################################################################################################################################################
## heimdall ################################################################################################################################################
############################################################################################################################################################
$ mkdir heimdall
$ cd heimdall
$ touch docker-compose.yml
$ nano docker-compose.yml # copy the contents from below
$ touch filebrowser.db
$ docker-compose up -d --force-recreate

services:
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Colombo # Set this to your timezone
      - HEIMDALL_PORT=9089 # Set the port that Heimdall will listen on
    volumes:
      - /var/heimdall/config:/config
    ports:
      - 9089:80 # Map the container's port to the host machine's port


######################################################################################################################################################################################################
## firefox ###### https://hub.docker.com/r/linuxserver/firefox  ##########################################################################################################################
######################################################################################################################################################################################################

services:
  firefox:
    image: lscr.io/linuxserver/firefox:latest
    container_name: firefox
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - FIREFOX_CLI=https://www.linuxserver.io/ #optional
    volumes:
      - /path/to/config:/config
    ports:
      - 3000:3000 ### OPEN FOR VMWARE STAGING
      - 3001:3001
    shm_size: "1gb"
    restart: unless-stopped


######################################################################################################################################################################################################
## File Browser  ## admin admin ######################################################################################################################################################################
######################################################################################################################################################################################################

$ mkdir filebrowser
$ cd filebrowser
$ touch docker-compose.yml
$ nano docker-compose.yml # copy the contents from below
$ touch filebrowser.db
$ docker-compose up -d --force-recreate

version: '3'
services:
  file-browser:
    image: filebrowser/filebrowser
    container_name: file-browser
    user: 1001:1001  #your uid
    ports:
      - 5001:80
      - 3389:8080
    volumes:
      - /home/sam/jdown
      - /home/sam/dockers/filebrowser.db/database.db
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true


# simplified

version: "3"
services:
  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    volumes:
      - /home/sam/jdown:/srv          ## add :/srv end of the path
    ports:
      - 5001:80
    restart: unless-stopped


######################################################################################################################################################################################################
## AgentDVR #########################################################################################################################################################################################
######################################################################################################################################################################################################


name: <your project name>
services:
    ispyagentdvr:
        container_name: AgentDVR
        environment:
            - PUID=1000
            - PGID=1000
            - "true"
        ports:
            - 8090:8090
            - 3478:3478/udp
            - 50000-50010:50000-50010/udp
        volumes:
            - /appdata/AgentDVR/config/:/AgentDVR/Media/XML/
            - /appdata/AgentDVR/media/:/AgentDVR/Media/WebServerRoot/Media/
            - /appdata/AgentDVR/commands:/AgentDVR/Commands/
        restart: unless-stopped
        image: mekayelanik/ispyagentdvr:latest



######################################################################################################################################################################################################
## Guacamole #########################################################################################################################################################################################
######################################################################################################################################################################################################

version "3"
  guacamole:
    container_name: guacamole
    image: guacamole/guacamole
    restart: always
    networks:
      - traefik_proxy
    ports:
      - "5001:8080"
    volumes:
      - ${USERDIR}/docker/shared:/shared

####################################################################################################################################################################################
#Stirling PDF ######################################################################################################################################################################
#####################################################################################################################################################################################

services:
  stirling-pdf:
    image: frooodle/s-pdf:0.29.0-fat 
    ports:
      - '8005:8080'
    volumes:
      - ./trainingData:/usr/share/tessdata #Required for extra OCR languages
      - ./extraConfigs:/configs
#      - ./customFiles:/customFiles/
#      - ./logs:/logs/
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false
      - LANGS=en_GB

# ADDITIONAL SECURITY 
# when container is creating is create "extra configs" directory 
# do the configuration and restart


######################################################################################################################################################################################################
## SECURIY #########################################################################################################################################################################################
######################################################################################################################################################################################################

DOCKER SCOUT Syft and Grype Anchore  OWASP ZAP
https://github.com/docker/scout-cli/releases
curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
sh install-scout.sh


AQUA_SECURITY-TRIVY
https://aquasecurity.github.io/trivy/v0.55/getting-started/installation/  ## Use container image
docker run -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy:0.55.1 image python:3.4-alpine

docker run -v /var/run/docker.sock:/var/run/docker.sock -v /home/sam/caches:/root/.cache/ aquasec/trivy:0.55.1 image portainer/portainer-ce:2.21.1 | grep "Total"

##SNIPEIT##
sudo docker run -v /var/run/docker.sock:/var/run/docker.sock -v /home/sam/caches:/root/.cache/ aquasec/trivy:0.55.1 image snipe/snipe-it:v7.0.11 | grep "Total"
sudo docker run -v /var/run/docker.sock:/var/run/docker.sock -v /home/sam/caches:/root/.cache/ aquasec/trivy:0.55.1 image linuxserver/snipe-it:7.0.12 | grep "Total"

##MARIADB## 
sudo docker run -v /var/run/docker.sock:/var/run/docker.sock -v /home/sam/caches:/root/.cache/ aquasec/trivy:0.55.1 image mariadb:10.11.8 | grep "Total"
sudo docker run -v /var/run/docker.sock:/var/run/docker.sock -v /home/sam/caches:/root/.cache/ aquasec/trivy:0.55.1 image linuxserver/mariadb:10.11.8 | grep "Total"

##PHP-MY-ADMIN##
sudo docker run -v /var/run/docker.sock:/var/run/docker.sock -v /home/sam/caches:/root/.cache/ aquasec/trivy:0.55.1 image phpmyadmin:5.2.1-apache | grep "Total"
sudo docker run -v /var/run/docker.sock:/var/run/docker.sock -v /home/sam/caches:/root/.cache/ aquasec/trivy:0.55.1 image linuxserver/phpmyadmin:5.2.1 | grep "Total"


##MONGODB##
sudo docker run -v /var/run/docker.sock:/var/run/docker.sock -v /home/sam/caches:/root/.cache/ aquasec/trivy:0.55.1 image  mongodb/mongodb-community-server:7.0.9-ubi9 | grep "Total"



########
docker pull portainer/portainer-ce:2.21.1
docker pull netdata/netdata:v1.47.1
docker pull restic/restic:0.17.0
docker pull chainguard/cadvisor
docker pull docker/scout-cli:1.14
docker pull crowdsecurity/crowdsec:v1.6.3

docker pull grafana/grafana:11.2.0
docker pull grafana/loki:main-5bffc10-amd64
docker pull prom/prometheus:v2.54.1
docker pull influxdb:1.8-alpine
docker pull telegraf:1.32.0-alpine
docker pull chronograf:1.7.17-alpine

docker pull sitespeedio/graphite:1.1.10-5

docker pull bitnami/phpmyadmin:5.2.1  #vmware [use-apache in other] [rooless]
docker pull uldiseihenbergs/meshcentral:1.1.29

docker pull frooodle/s-pdf:0.29.0-fat       # [2G]
docker pull frooodle/s-pdf:0.29.0-ultra-lite 